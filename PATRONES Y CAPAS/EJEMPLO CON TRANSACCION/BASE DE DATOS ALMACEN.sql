CREATE DATABASE DB_ALMACEN_TRANSACCION
GO
USE DB_ALMACEN_TRANSACCION
GO

-- DDL (LENGUAJE DE DEFINCION DE DATOS)
CREATE TABLE PRESUPUESTOS(
	ID INT IDENTITY(1,1),
	CLIENTE VARCHAR(75) NOT NULL,
	FECHA DATETIME NOT NULL,
	VIGENCIA INT NOT NULL,
	CONSTRAINT pk_presupuestos PRIMARY KEY (ID)
);

CREATE TABLE PRODUCTOS(
	CODIGO INT IDENTITY(1,1),
	N_PRODUCTO VARCHAR(50) NOT NULL,
	STOCK INT NOT NULL,
	ESTA_ACTIVO BIT NOT NULL,
	CONSTRAINT pk_productos PRIMARY KEY (CODIGO)
);

CREATE TABLE DETALLES_PRESUPUESTO(
	ID_DETALLE INT,
	ID_PRESUPUESTO INT,
	ID_PRODUCTO INT,
	CANTIDAD INT NOT NULL,
	PRECIO FLOAT NOT NULL,
	CONSTRAINT pk_detalles_presupuesto PRIMARY KEY (ID_DETALLE,ID_PRESUPUESTO),
	CONSTRAINT fk_detalles_presupuesto_presupuesto FOREIGN KEY (ID_PRESUPUESTO)
	REFERENCES PRESUPUESTOS (ID),
	CONSTRAINT fk_detalles_presupuesto_producto FOREIGN KEY (ID_PRODUCTO)
	REFERENCES PRODUCTOS (CODIGO)
);


-- DML (LENGUAJE DE MANIPULACION DE DATOS)

INSERT INTO PRESUPUESTOS(CLIENTE,FECHA,VIGENCIA)
VALUES('Cliente de prueba', '2/9/2024 16:58:03',10),
('Cliente 2','10/10/2024 16:58:03',5);

INSERT INTO PRODUCTOS(N_PRODUCTO,STOCK,ESTA_ACTIVO)
VALUES('Test',1000,0),
('Lentes de sol',5000,1),
('Protector Solar F50',10000,1),
('Caramelos masticables',25000,1),
('Shampoo',3500,1),
('Desodorante',2450,1),
('Dentifrico',3420,1),
('Peine',500,1),
('Secador de pelo',6870,1);

INSERT INTO DETALLES_PRESUPUESTO(ID_DETALLE,ID_PRESUPUESTO,ID_PRODUCTO,CANTIDAD,PRECIO)
VALUES(1,1,2,3,4500.50),
(2,1,3,5,8700),
(3,1,5,2,2700.50),
(1,2,7,7,3700.25),
(2,2,9,2,1500),
(3,2,6,3,2300.25);

GO
-- SP (PROCEDIMIENTOS ALMACENADOS)
--1
CREATE PROCEDURE SP_GUARDAR_PRODUCTO
@codigo int ,
@nombre varchar(50),
@stock int
AS
BEGIN 
	IF @codigo = 0
		BEGIN
			insert into PRODUCTOS(N_PRODUCTO, STOCK, ESTA_ACTIVO) 
			values (@nombre,@stock, 1)	
		END
	ELSE
		BEGIN
			update PRODUCTOS 
			set N_PRODUCTO= @nombre, STOCK= @stock 
			where CODIGO=@codigo
		END
END;
GO
--2
CREATE PROCEDURE SP_INSERTAR_DETALLE
	@presupuesto int,
	@id_detalle int,
	@producto int,
	@cantidad int,
	@precio float

AS
BEGIN
	INSERT INTO DETALLES_PRESUPUESTO(ID_DETALLE,ID_PRESUPUESTO,ID_PRODUCTO,CANTIDAD,PRECIO)
	VALUES (@id_detalle, @presupuesto, @producto, @cantidad, @precio);
END;
GO
--3
CREATE PROCEDURE SP_INSERTAR_MAESTRO
	@cliente varchar(75),
	@vigencia int,
	@id int output
AS
BEGIN
	INSERT INTO PRESUPUESTOS(CLIENTE,FECHA,VIGENCIA) 
	VALUES (@cliente, GETDATE(), @vigencia);
	SET @id = SCOPE_IDENTITY();
END;
GO
--4
CREATE PROCEDURE SP_RECUPERAR_PRESUPUESTO_POR_ID
	@id int
AS
BEGIN
	SELECT P.*,DP.PRECIO,DP.CANTIDAD,PR.*
	FROM PRESUPUESTOS P
	JOIN DETALLES_PRESUPUESTO DP ON DP.ID_PRESUPUESTO = P.ID
	JOIN PRODUCTOS PR ON PR.CODIGO = DP.ID_PRODUCTO
	WHERE P.ID = @id;
END;
GO
--5
CREATE PROCEDURE SP_RECUPERAR_PRESUPUESTOS
AS
BEGIN
	SELECT P.*,DP.PRECIO,DP.CANTIDAD,PR.*
	FROM PRESUPUESTOS P
	JOIN DETALLES_PRESUPUESTO DP ON DP.ID_PRESUPUESTO = P.ID
	JOIN PRODUCTOS PR ON PR.CODIGO = DP.ID_PRODUCTO
	ORDER BY P.ID 
END;
GO
--6
CREATE PROCEDURE SP_RECUPERAR_PRODUCTO_POR_CODIGO
	@codigo int
AS
BEGIN
	SELECT * 
	FROM PRODUCTOS 
	WHERE CODIGO = @codigo
END;
GO
--7
CREATE PROCEDURE SP_RECUPERAR_PRODUCTOS
AS
BEGIN
	SELECT * 
	FROM PRODUCTOS
END;
GO
--8
CREATE PROCEDURE SP_REGISTRAR_BAJA_PRODUCTO
	@codigo int 

AS
BEGIN
	UPDATE PRODUCTOS 
	SET ESTA_ACTIVO = 0 
	WHERE CODIGO = @codigo;
END;

